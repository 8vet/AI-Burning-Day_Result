
# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
#spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/ailog?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.hikari.username=root
spring.datasource.hikari.password=

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

stt.api.key.id=mn5bdya549
stt.api.key=f5lJcbfrJcGYLGxTSo6aKh0aweyjrwVGpCTBQwLt

spring.profiles.active=local
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

server.ssl.enabled=true
server.ssl.key-store=keystore.p12
server.ssl.key-store-password=123456
server.ssl.key-alias=bns-ssl
server.port=8443

mail.user=maruoov123
mail.password=aifhaing12!!
